/*
  handleChange(e){
    let keyID = e.target.name;
    let datum = e.target.value;
    let statObj = {};
    statObj[keyID] = datum;
    this.setState({[keyID]: datum}) //pass to display value
  }
*/

/*dndRaceMods = dndRaceMods.map((mod)=>{
  if(mod[0] === "["){
    mod = mod.replace("[","").replace("]","").split(",");
  }else{
    mod = eval(mod);
  }
  return(mod);
})*/

  //  this.handleChange = this.handleChange.bind(this);

  /*if(mod[0] === "["){
    mod = mod.replace("[","").replace("]","").split(",");
  }else{
    mod = eval(mod);
  }*/


<%= simple_form_for(@character) do |f| %>
<% if @character.errors.any? %>
  <div id="errors">
    <h2><%= pluralize(@character.errors.count, "error")%>
      prevented this Character for saving.
    </h2>
    <ul>
      <%=@character.errors.full_message.each do |msg| %>
      <li><%= msg %></li>
      <% end %>
      </ul>
    <% end %>
  </div>

  <div class="form-group">
  <%= f.input :image, input_html: {class: 'form-control'} %>

<div class="form-group">
  <%= f.input :name, input_html: {class: 'form-control'} %>
</div>

<div class="form-group">
      <%= f.input :description, input_html: {class: 'form-control'} %>
      <%= f.button :submit%>
</div>

<% end %>
<% @dndrace.each do |race| %>

<% end %>
